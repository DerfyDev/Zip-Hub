--> Init <--
if game.PlaceId == 155615604 then
	repeat wait() until game:IsLoaded() == true


	local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/XxSpikeChixX/Zip-Hub/main/Venyx%20Rewrite"))()
	local venyx = library.new("Zip Hub", 5013109572)

	--> Pages <--

	local Main = venyx:addPage("Main", 5012544693)
	local MainSection = Main:addSection("Main")
	
	local Player = venyx:addPage("Player", 5012544693)
	local PlayerSection = Player:addSection("Player")
	
	local Teleports = venyx:addPage("Teleports", 5012544693)
	local TeleportsSection = Teleports:addSection("Telports")
	
	local Other = venyx:addPage("Other", 5012544693)
	local OtherSection = Other:addSection("Other")
	
	local UI = venyx:addPage("UI", 5012544693)
	local UISection = UI:addSection("UI")

	--> Variables <--
	
	local themes = {
		Background = Color3.fromRGB(24, 24, 24),
		Glow = Color3.fromRGB(0, 0, 0),
		Accent = Color3.fromRGB(10, 10, 10),
		LightContrast = Color3.fromRGB(20, 20, 20),
		DarkContrast = Color3.fromRGB(14, 14, 14),  
		TextColor = Color3.fromRGB(255, 255, 255)
	}

	--> Main <--

	MainSection:addButton("Anti Taze", function()
		game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = true
		game.Players.LocalPlayer.CharacterAdded:connect(function()
			game.Workspace:WaitForChild(game.Players.LocalPlayer.Name)
			game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = true
		end)
	end)

	MainSection:addButton("Btools", function()
		local tool1 = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
		local tool2 = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
		local tool3 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
		tool1.BinType = "Clone"
		tool2.BinType = "Hammer"
		tool3.BinType = "Grab"
	end)

	MainSection:addDropdown("Dropdown", {"Criminal", "Neutral", "Gaurd", "Inmate", 1, 2, 3}, function(v)
		if v == "Criminal" then
			local weld02 = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-919.958, 95.327, 2138.189)
			wait(1)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(weld02)
		elseif v == "Inmate" then
			game.Workspace.Remote.TeamEvent:FireServer("Bright orange")
		elseif v == "Gaurd" then
			game.Workspace.Remote.TeamEvent:FireServer("Bright blue")
		elseif v == "Neutral" then
			game.Workspace.Remote.TeamEvent:FireServer("Medium stone grey")
		end
	end)

	MainSection:addButton("Give All Items", function()
		for i,v in pairs(game.Workspace.Prison_ITEMS.single:GetChildren()) do
			if v:FindFirstChild("ITEMPICKUP") then
				game.Workspace.Remote.ItemHandler:InvokeServer(v.ITEMPICKUP)
			end
		end
		for i,v in pairs(game.Workspace.Prison_ITEMS.giver:GetChildren()) do
			if v:FindFirstChild("ITEMPICKUP") then
				game.Workspace.Remote.ItemHandler:InvokeServer(v.ITEMPICKUP)
			end
		end
	end)


	MainSection:addDropdown("Modify Item", {"M9", "Remington 870", "AK-47", 1, 2, 3}, function(v)
		local module = nil
		if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v) then
			module = require(game:GetService("Players").LocalPlayer.Backpack[v].GunStates)
		elseif game:GetService("Players").LocalPlayer.Character:FindFirstChild(v) then
			module = require(game:GetService("Players").LocalPlayer.Character[v].GunStates)
		end
		if module ~= nil then
			module["MaxAmmo"] = math.huge
			module["CurrentAmmo"] = math.huge
			module["StoredAmmo"] = math.huge
			module["FireRate"] = 0.1
			module["Spread"] = 0
			module["Range"] = math.huge
			module["Bullets"] = 8
			module["ReloadTime"] = 0.000001
			module["AutoFire"] = true
			venyx:Notify("Success", "Successfully modified the gun: " ..v)
		else
			venyx:Notify("Error", "Please have the gun in your inventory first")
		end
	end)

	MainSection:addButton("Infinite Yield", function()
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
	end)

	MainSection:addButton("Remove Doors", function()
		game.Workspace.Doors:Destroy()
		game.Workspace.Prison_Cellblock.doors:Destroy()
		local Warehouses = game.Workspace.Warehouses
		for i,v in pairs(Warehouses:GetDescendants()) do
			if v.Name == "doors" then
				v:Destroy()
			end
		end
	end)
	
	MainSection:addButton("Force Reset", function()
		game.Workspace.Remote.loadchar:InvokeServer(game.Players.LocalPlayer.Name)
	end)

	MainSection:addButton("Server Hop", function()
		local Servers = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
		for i,v in pairs(Servers.data) do
			if v.playing ~= v.maxPlayers then
				game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v.id)
			end
		end
	end)
	
	--> Player <--
	
	PlayerSection:addSlider("Hip Height", 0, 0, 250, function(value)
		game.Players.LocalPlayer.Character.Humanoid.HipHeight = value
	end)
	
	PlayerSection:addSlider("Jump Power", 50, 50, 500, function(value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
	end)
	
	PlayerSection:addSlider("Walk Speed", 16, 16, 1000, function(value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
	end)
	
	--> Teleports <--
	
	TeleportsSection:addButton("Button", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(916.163, 101.481, 2345.52)
	end)

	TeleportsSection:addButton("Cell Block", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(917.056, 101.49, 2440.01)
	end)

	TeleportsSection:addButton("Criminal Base", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-891.105, 95.5991, 2056.7)
	end)

	TeleportsSection:addButton("Entrace Gate", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(500.703, 99.4857, 2216.35)
	end)

	TeleportsSection:addButton("Entrance", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(656.704, 101.489, 2272.54)
	end)

	TeleportsSection:addButton("Gaurds Only", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(835.739, 101.491, 2312.04)
	end)

	TeleportsSection:addButton("Hallway", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(859.539, 101.47, 2361.49)
	end)

	TeleportsSection:addButton("Yard", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(820.699, 101.457, 2380.45)
	end)
	
	--> Other <--
	
	OtherSection:addButton("Anti AFK", function()
		repeat
			wait()
		until game:GetService("Players")

		repeat
			wait()
		until game:GetService("Players").LocalPlayer

		local GC = getconnections or get_signal_cons
		if GC then
			for i,v in pairs(GC(game:GetService("Players").LocalPlayer.Idled)) do
				if v["Disable"] then
					v["Disable"](v)
				elseif v["Disconnect"] then
					v["Disconnect"](v)
				end
			end
		end
	end)

	OtherSection:addButton("Ping Counter", function()
		local textlab = Instance.new("TextLabel")
		textlab.Size = UDim2.new(0, 200, 0, 28)
		textlab.BackgroundTransparency = 1
		textlab.TextColor3 = Color3.new(1, 1, 1)
		textlab.TextStrokeTransparency = 0
		textlab.TextStrokeColor3 = Color3.new(0.24, 0.24, 0.24)
		textlab.Font = Enum.Font.SourceSans
		textlab.TextSize = 30
		textlab.Text = "nil"
		textlab.BackgroundColor3 = Color3.new(0, 0, 0)
		textlab.Position = UDim2.new(0.856, 0, 0.043, 0)
		textlab.TextXAlignment = Enum.TextXAlignment.Right
		textlab.BorderSizePixel = 0
		textlab.Parent = game.CoreGui.RobloxGui
		spawn(function()
			repeat
				wait(0)
				local ping = tonumber(game:GetService("Stats"):FindFirstChild("PerformanceStats").Ping:GetValue())
				ping = math.floor(ping)
				textlab.Text = ping.." MS"
			until textlab == nil
		end)
	end)
	
	--> UI <--
	
	UISection:addKeybind("Toggle UI", Enum.KeyCode.LeftShift, function()
		print("UI has been toggled")
		venyx:toggle()
	end, function()
		print("Changed Keybind")
	end)
	
	for theme, color in pairs(themes) do
		UISection:addColorPicker(theme, color, function(color3)
			venyx:setTheme(theme, color3)
		end)
	end
	
	--> After Loading <--
	
	venyx:SelectPage(venyx.pages[1], true)
	
end
