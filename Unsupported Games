--> Init <--
repeat wait() until game:IsLoaded() == true

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/XxSpikeChixX/Zip-Hub/main/Venyx%20Rewrite"))()
local venyx = library.new("Zip Hub", 5013109572)

local Main = venyx:addPage("Main", 5012544693)
local MainSection = Main:addSection("Main")

local Player = venyx:addPage("Player", 5012544693)
local PlayerSection = Player:addSection("Player")

local Other = venyx:addPage("Other", 5012544693)
local OtherSection = Other:addSection("Other")

local UI = venyx:addPage("UI", 5012544693)
local UISection = UI:addSection("UI")

--> Variables <--

local themes = {
	Background = Color3.fromRGB(24, 24, 24),
	Glow = Color3.fromRGB(0, 0, 0),
	Accent = Color3.fromRGB(10, 10, 10),
	LightContrast = Color3.fromRGB(20, 20, 20),
	DarkContrast = Color3.fromRGB(14, 14, 14),  
	TextColor = Color3.fromRGB(255, 255, 255)
}

--> Main <--

MainSection:addButton("Btools", function()
	local tool1 = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
	local tool2 = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
	local tool3 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
	tool1.BinType = "Clone"
	tool2.BinType = "Hammer"
	tool3.BinType = "Grab"
end)

MainSection:addButton("Infinite Yield", function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end)

MainSection:addButton("Force Reset", function()
	game.Workspace.Remote.loadchar:InvokeServer(game.Players.LocalPlayer.Name)
end)

MainSection:addButton("Server Hop", function()
	local Servers = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
	for i,v in pairs(Servers.data) do
		if v.playing ~= v.maxPlayers then
			game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v.id)
		end
	end
end)

--> Player <--

PlayerSection:addSlider("Hip Height", 0, 0, 250, function(value)
		game.Players.LocalPlayer.Character.Humanoid.HipHeight = value
end)

PlayerSection:addSlider("Jump Power", 50, 50, 500, function(value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
end)

PlayerSection:addSlider("Walk Speed", 16, 16, 1000, function(value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
end)

--> Other <--

OtherSection:addButton("Anti AFK", function()
	repeat
		wait()
	until game:GetService("Players")

	repeat
		wait()
	until game:GetService("Players").LocalPlayer

	local GC = getconnections or get_signal_cons
	if GC then
		for i,v in pairs(GC(game:GetService("Players").LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
	end
end)

--> Other <--

OtherSection:addButton("Ping Counter", function()
	local textlab = Instance.new("TextLabel")
	textlab.Size = UDim2.new(0, 200, 0, 28)
	textlab.BackgroundTransparency = 1
	textlab.TextColor3 = Color3.new(1, 1, 1)
	textlab.TextStrokeTransparency = 0
	textlab.TextStrokeColor3 = Color3.new(0.24, 0.24, 0.24)
	textlab.Font = Enum.Font.SourceSans
	textlab.TextSize = 30
	textlab.Text = "nil"
	textlab.BackgroundColor3 = Color3.new(0, 0, 0)
	textlab.Position = UDim2.new(0.856, 0, 0.043, 0)
	textlab.TextXAlignment = Enum.TextXAlignment.Right
	textlab.BorderSizePixel = 0
	textlab.Parent = game.CoreGui.RobloxGui
	spawn(function()
		repeat
			wait(0)
			local ping = tonumber(game:GetService("Stats"):FindFirstChild("PerformanceStats").Ping:GetValue())
			ping = math.floor(ping)
			textlab.Text = ping.." MS"
		until textlab == nil
	end)
end)

--> UI <--

UISection:addKeybind("Toggle UI", Enum.KeyCode.RightControl, function()
	print("UI has been toggled")
	venyx:toggle()
end, function()
	print("Changed Keybind")
end)

for theme, color in pairs(themes) do
	UISection:addColorPicker(theme, color, function(color3)
		venyx:setTheme(theme, color3)
	end)
end

--> After Loading <--

venyx:SelectPage(venyx.pages[1], true)
