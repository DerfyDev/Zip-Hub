--> Init <--
repeat wait() until game:IsLoaded() == true


	local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/XxSpikeChixX/Zip-Hub/main/Venyx%20Rewrite"))()
	local venyx = library.new("Zip Hub", 5013109572)

	--> Pages <--

	local Main = venyx:addPage("Main", 5012544693)
	local MainSection = Main:addSection("Main")

	local Player = venyx:addPage("Player", 5012544693)
	local PlayerSection = Player:addSection("Player")

	local Other = venyx:addPage("Other", 5012544693)
	local OtherSection = Other:addSection("Other")

	local UI = venyx:addPage("UI", 5012544693)
	local UISection = UI:addSection("UI")

	--> Variables <--

	getgenv().alerts = false
	getgenv().godmode = false
	local themes = {
		Background = Color3.fromRGB(24, 24, 24),
		Glow = Color3.fromRGB(0, 0, 0),
		Accent = Color3.fromRGB(10, 10, 10),
		LightContrast = Color3.fromRGB(20, 20, 20),
		DarkContrast = Color3.fromRGB(14, 14, 14),  
		TextColor = Color3.fromRGB(255, 255, 255)
	}

	--> Main <--

	MainSection:addButton("Btools", function()
		local tool1 = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
		local tool2 = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
		local tool3 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
		tool1.BinType = "Clone"
		tool2.BinType = "Hammer"
		tool3.BinType = "Grab"
	end)

	MainSection:addButton("Infinite Yield", function()
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
	end)

	MainSection:addButton("Remove Doors", function()
		game.Workspace.Doors:Destroy()
		game.Workspace.Prison_Cellblock.doors:Destroy()
		local Warehouses = game.Workspace.Warehouses
		for i,v in pairs(Warehouses:GetDescendants()) do
			if v.Name == "doors" then
				v:Destroy()
			end
		end
	end)

	MainSection:addButton("Force Reset", function()
		game.Workspace.Remote.loadchar:InvokeServer(game.Players.LocalPlayer.Name)
	end)

	MainSection:addButton("Server Hop", function()
		local Servers = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
		for i,v in pairs(Servers.data) do
			if v.playing ~= v.maxPlayers then
				game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v.id)
			end
		end
	end)

	--> Player <--

	PlayerSection:addButton("Fly (K)", function(state)
		repeat wait()
		until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
		local mouse = game.Players.LocalPlayer:GetMouse()
		repeat wait() until mouse
		local plr = game.Players.LocalPlayer
		local torso = plr.Character.Torso
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0

		function Fly()
			local bg = Instance.new("BodyGyro", torso)
			bg.P = 9e4
			bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			bg.cframe = torso.CFrame
			local bv = Instance.new("BodyVelocity", torso)
			bv.velocity = Vector3.new(0,0.1,0)
			bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
			repeat wait()
				plr.Character.Humanoid.PlatformStand = true
				if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
					speed = speed+.5+(speed/maxspeed)
					if speed > maxspeed then
						speed = maxspeed
					end
				elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
					speed = speed-1
					if speed < 0 then
						speed = 0
					end
				end
				if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
				elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				else
					bv.velocity = Vector3.new(0,0.1,0)
				end
				bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
			until not flying
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			speed = 0
			bg:Destroy()
			bv:Destroy()
			plr.Character.Humanoid.PlatformStand = false
		end
		mouse.KeyDown:connect(function(key)
			if key:lower() == "k" then
				if flying then flying = false
				else
					flying = true
					Fly()
				end
			elseif key:lower() == "w" then
				ctrl.f = 1
			elseif key:lower() == "s" then
				ctrl.b = -1
			elseif key:lower() == "a" then
				ctrl.l = -1
			elseif key:lower() == "d" then
				ctrl.r = 1
			end
		end)
		mouse.KeyUp:connect(function(key)
			if key:lower() == "w" then
				ctrl.f = 0
			elseif key:lower() == "s" then
				ctrl.b = 0
			elseif key:lower() == "a" then
				ctrl.l = 0
			elseif key:lower() == "d" then
				ctrl.r = 0
			end
		end)
		Fly()
	end)

	PlayerSection:addToggle("God (Buggy)", nil, function(state)
		getgenv().godmode = state
	end)

	PlayerSection:addSlider("Hip Height", 0, 0, 250, function(value)
		while true do
			game.Players.LocalPlayer.Character.Humanoid.HipHeight = value
		end
	end)

	PlayerSection:addSlider("Jump Power", 50, 50, 500, function(value)
		while true do
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
		end
	end)

	PlayerSection:addToggle("Noclip", nil, function(state)
		getgenv().noclip = state
		game:GetService("RunService").Stepped:Connect(function(state)
			if getgenv().noclip then
				game.Players.LocalPlayer.Character.Head.CanCollide = false
				game.Players.LocalPlayer.Character.Torso.CanCollide = false
				game.Players.LocalPlayer.Character["Left Leg"].CanCollide = false
				game.Players.LocalPlayer.Character["Right Leg"].CanCollide = false
			end
		end)
	end)

	PlayerSection:addSlider("Walk Speed", 16, 16, 1000, function(value)
		while true do
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
		end
	end)

	--> Other <--

	OtherSection:addButton("Anti AFK", function()
		repeat
			wait()
		until game:GetService("Players")

		repeat
			wait()
		until game:GetService("Players").LocalPlayer

		local GC = getconnections or get_signal_cons
		if GC then
			for i,v in pairs(GC(game:GetService("Players").LocalPlayer.Idled)) do
				if v["Disable"] then
					v["Disable"](v)
				elseif v["Disconnect"] then
					v["Disconnect"](v)
				end
			end
		end
	end)

	OtherSection:addToggle("Joined/Left Alerts", nil, function(state)
		getgenv().alerts = state
	end)

	OtherSection:addButton("Ping Counter", function()
		local textlab = Instance.new("TextLabel")
		textlab.Size = UDim2.new(0, 200, 0, 28)
		textlab.BackgroundTransparency = 1
		textlab.TextColor3 = Color3.new(1, 1, 1)
		textlab.TextStrokeTransparency = 0
		textlab.TextStrokeColor3 = Color3.new(0.24, 0.24, 0.24)
		textlab.Font = Enum.Font.SourceSans
		textlab.TextSize = 30
		textlab.Text = "nil"
		textlab.BackgroundColor3 = Color3.new(0, 0, 0)
		textlab.Position = UDim2.new(0.856, 0, 0.043, 0)
		textlab.TextXAlignment = Enum.TextXAlignment.Right
		textlab.BorderSizePixel = 0
		textlab.Parent = game.CoreGui.RobloxGui
		spawn(function()
			repeat
				wait(0)
				local ping = tonumber(game:GetService("Stats"):FindFirstChild("PerformanceStats").Ping:GetValue())
				ping = math.floor(ping)
				textlab.Text = ping.." MS"
			until textlab == nil
		end)
	end)

	--> UI <--

	UISection:addKeybind("Toggle UI", Enum.KeyCode.RightControl, function()
		print("UI has been toggled")
		venyx:toggle()
	end, function()
		print("Changed Keybind")
	end)

	for theme, color in pairs(themes) do
		UISection:addColorPicker(theme, color, function(color3)
			venyx:setTheme(theme, color3)
		end)
	end

	--> After Loading <--

	venyx:SelectPage(venyx.pages[1], true)

	--> Variables <--

	game.Players.PlayerAdded:Connect(function(plr)
		if getgenv().alerts then
			venyx:Notify("Player Joined", plr.Name.. " has joined the game")
		end
	end)

	game.Players.PlayerRemoved:Connect(function(plr)
		if getgenv().alerts then
			venyx:Notify("Player Left", plr.Name.. "has left the game")
		end
	end)

game:GetService("RunService").RenderStepped:Connect(function()
	if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and getgenv().godmode then
		local pos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
		game.Workspace.Remote.loadchar:InvokeServer(game.Players.LocalPlayer.Name)  
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
	end
end)
